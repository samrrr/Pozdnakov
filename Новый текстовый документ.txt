
//_grm - матрица графа в формате JSON (тоесть строчка)

function get_automorphs(_grm)
{
	let grm=JSON.parse(_gr);
	//grm-двумерный массив
	//grm.length-размер матрицы(количество вершин)
	
	let res=[];

	return res;
}

//результат это массив массивов
/*
res[0]- это все автоморфизмы 0(таких нет)
res[1]- это все автоморфизмы 1(такой только 1)
res[2]- это все автоморфизмы 2
res[3]- это все автоморфизмы 3
и.т.д.


автоморфизм (0->1,1->2,2->3,3->0) записывается так:   [1,2,3,0]
автоморфизм (0->3,1->2,2->1,3->0) записывается так:   [3,2,1,0]
тоесть автоморфизм записывается в виде массива в котором на итом месте стоит новый номер итой вершины
*/



1) примеры простых и олимпиадных задач, которые будут допускать автоматическую проверку создаваемой системой

1) обобщим данную задачу так: На каком минимальном количестве вершин существует граф, у которого есть 2 вершины с степенью 5, 3 со степенью 2 и 1 со степенью 1?(цифры могут быть другими)


Можно сначала сгенерировать случайный граф и потом взять с него условия, но при этом ответ всегда будет равен количеству задаваемых вершин, а это нехорошо.

Для генерации задач есть 2 способа:
1. создать граф и взять из него условия для задачи(от части вершин).

Но не факт, что невозможно соблюсти все условия при меньшем чем в исходном графе количестве вершин.

2. сгенерировать случайные цифры в задаче
но решения такой задачи программой следует перебрать множество графов.
Но как стоит перебирать и что, чтобы получить верный ответ?

Как можно сгенерировать условия для данной задачи?

2) -

3) -

4) мне не известно как рационально проверить и решить данную задачу

5) задачи на "Докажите...." не проверить

6) непонятно как реализовывать и какое решение

7)

8)

9)

10)

11)

12)

13)

14)

